I'm using:
- Eclipse 3.5.1
- Maven 2.2.1

To compile EasyMock in Eclipse:
- In the base directory do "mvn eclipse:eclipse -DdownloadSources=true"
- Import the newly created Eclipse project to your Eclipse workspace
- For the project to compile, you need to have a classpath variable named M2_REPO set to you maven repository directory.
  Two ways to set it:
  - Manually (Windows->Preferences->Classpath variables)
  - Calling "mvn eclipse:configure-workspace -Declipse.workspace=path/to/your/eclipse/workspace" (Eclipse must be closed)

To build EasyMock with Maven:
- Tests are ran over JDK 1.5. You need to add something like this in your settings.xml
- The clover.license must be passed to Maven with -D or in the settins.xml

    <profile>
      <id>easymock</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <maven.clover.licenseLocation>${user.home}/clover.license</maven.clover.licenseLocation>
        <jdk1_5.jvm>C:\Program Files\Java\jdk1.5.0_22\bin\java.exe</jdk1_5.jvm>
      </properties>
    </profile

- Then "mvn verify" or "mvn install"
- Also do a "mvn verify" on easymock-integration (with its pom using the latest EasyMock version)

To update the versions:
- "mvn versions:set -DnewVersion=X.Y"
- "mvn versions:commit" if everything is ok, "mvn versions:revert" otherwise
To bundle EasyMock:
- "mvn clean verify assembly:single"

To deploy to the Sonatype maven repository:

- You will first need to add something like this to your settings.xml

  <servers>
    <server>
      <id>sonatype-nexus-snapshots</id>
      <username>sonatypeuser</username>
      <password>sonatypepassword</password>      
    </server>
    <server>
      <id>sonatype-nexus-staging</id>
      <username>sonatypeuser</username>
      <password>sonatypepassword</password>
    </server>      
  </servers>

- Then follow the instructions from the site below to create your key to sign the deployed items

http://www.sonatype.com/people/2010/01/how-to-generate-pgp-signatures-with-maven/

- Finally just type 'mvn clean deploy -Dgpg.passphrase=yourpassphrase'

To build the maven site (with findbugs, checkstyle, jdepends and JavaNCSS reports):
- You will to give enough memory to maven with 'set MAVEN_OPTS=-Xmx512m' (or setting it as environment variable)
- Then type 'mvn site'

To check-in:
- easymock/trunk/svn-config.txt should be used to handle mime types correctly

To check dependencies and plugins versions:
- mvn versions:display-dependency-updates versions:display-plugin-updates

To update the license:
- mvn validate license:format

To release to SourceForge:
- Update the Website
  - Update index.html to announce the new version
  - Update Download.html to add the new package
  - Update Documentation.html to add the new documentation pages
  - Copy the javadoc to website/api
  - Copy Documentation.html and Documentation_fr.html from the zip bundle to the website (rename them)
  - Check-in everything
  - Log to the shell and launch refresh-website.sh

- Upload the bundle
  - Go to the File Manager on the EasyMock SF project 
  - Create a folder named "EasyMock 2.x"
  - Upload the bundle in the newly created directory
  - Add "ReleaseNotes.txt" containing the release notes
  - Click on "Release notes.txt" and specify it's a release note
  - Client on the zip and select the release notes file
  
- DON'T FORGET: Tag in SVN!
